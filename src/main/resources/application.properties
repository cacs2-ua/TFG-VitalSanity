spring.application.name = vitalsanity
spring.datasource.url=jdbc:h2:mem:dev
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
logging.level.org.hibernate.SQL=debug
logging.level.vitalsanity=debug
spring.sql.init.mode=never
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

server.servlet.context-path=/vital-sanity

spring.profiles.active=postgres

spring.jpa.open-in-view=false
server.port=8058
server.ssl.enabled=true
server.ssl.key-store=classpath:server.keystore
server.ssl.key-store-password=changeit
server.ssl.key-store-type=JKS
server.ssl.trust-store=classpath:truststore.jks
server.ssl.trust-store-password=CRISCHAD
server.ssl.key-alias=server



spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525

# Lo sustituiríamos por el dato real. Aquí lo ocultamos para no revelar secretos.
spring.mail.username=ultrasecreto
spring.mail.password=ultrasecreto
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
app.mail.from=vitalsanitysx@gmail.com

spring.mail.default-encoding=UTF-8

spring.mail.properties.mail.smtp.connectiontimeout=32000
spring.mail.properties.mail.smtp.timeout=32000
spring.mail.properties.mail.smtp.writetimeout=32000



# Dado que en la aplicación se suben con frecuencia informes médicos detallados, los cuales
# pueden incluir imágenes de gran tamaño, con esta configuración nos aseguramos de que no sucedan problemas
# a la hora de subir archivos grandes al mismo tiempo que seguimos limitando el tamaño de los archivos
# dentro de un límite razonable.
# Tengamos en cuenta que, por ejemplo, en un estudio de resonancia completo que utilice
# imágenes DICOM, en dicho caso el tamaño de archivo puede llegar a superar los 50MB
# En producción y una vez que la aplicación hubiese salido al mercado de forma oficial, esta configuración se podría dejar con los siguientes valores:
# spring.servlet.multipart.max-file-size=60MB
# spring.servlet.multipart.max-request-size=200MB
# Pero dado que la aplicación aún no ha salido al mercado de forma oficial y no queremos que AWS nos meta un sablazo,
# lo dejaremos por el momento en 3MB y 4MB respectivamente
spring.servlet.multipart.max-file-size=3MB
spring.servlet.multipart.max-request-size=4MB


aws.region=eu-south-2
aws.s3.bucket-name=vitalsanity-app-bucket


